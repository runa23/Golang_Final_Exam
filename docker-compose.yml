services:
  #User Service
  user-service:
    build: 
      context: .
      dockerfile: ./user/Dockerfile
    container_name: user-service
    ports:
      - "50051:50051"
    depends_on:
      pg-db_user:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "50051"]
      interval: 10s
      timeout: 5s
      retries: 5

  #Wallet Service
  wallet-service:
    build: 
      context: .
      dockerfile: ./wallet/Dockerfile
    container_name: wallet-service
    ports:
      - "50052:50052"
    depends_on:
      pg-db_wallet:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "50052"]
      interval: 10s
      timeout: 5s
      retries: 5

  #Aggregator Service
  aggregator-service:
    build: 
      context: .
      dockerfile: ./aggregator/Dockerfile
    container_name: aggregator-service
    ports:
      - "8080:8080"
    depends_on:
      pg-db_user:
        condition: service_healthy
      pg-db_wallet:
        condition: service_healthy
      user-service:
        condition: service_healthy
      wallet-service:
        condition: service_healthy

  #DB User
  pg-db_user:
    image: postgres:latest
    environment:
      POSTGRES_HOST: pg-db_user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: go_db_user
    ports:
      - 5432:5432
    # volumes:
    #   - ./user/data_user:/var/lib/postgresql/data
    command: -p 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  #DB Wallet
  pg-db_wallet:
    image: postgres:latest
    environment:
      POSTGRES_HOST: pg-db_wallet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: go_db_wallet
    ports:
      - 5433:5432
    # volumes:
    #   - ./wallet/data_wallet:/var/lib/postgresql/data
    command: -p 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5